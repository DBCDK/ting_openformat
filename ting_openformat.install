<?php

/**
 * @file
 * Install, update and uninstall functions for the ting module.
 */


/**
 * Implements hook_schema().
 */
function ting_openformat_schema() {
  $schema['ting_openformat_manifestation'] = array(
    'description' => 'Local proxy table for ting_openformat manifestations.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary local identifier for a ting_openformat manifestation.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ding_entity_id' => array(
        'description' => 'The ting_openformat manifestation id.',
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'ding_entity_id' => array('ding_entity_id'),
    ),
    'primary key' => array('tid'),
  );

  // ... also make a cache table in case we decide to cache som entities
  $schema['cache_bibdk_webservices'] = drupal_get_schema_unprocessed('system', 'cache');


  /*$schema['ting_openformat_manifestation_revision'] = array(
    'description' => 'Stores information about each saved version of a {ting_openformat_manifestation}.',
    'fields' => array(
      'tid' => array(
        'description' => 'The {ting_openformat_manifestation} this version belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'description' => 'The primary identifier for this version.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'A Unix timestamp indicating when this version was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'tid' => array('tid'),
    ),
     'primary key' => array('vid'),
    'foreign keys' => array(
      'versioned_ting_openformat_manifestation' => array(
        'table' => 'ting_openformat_manifestation',
        'columns' => array('tid' => 'tid'),
      ),
    ),
    );*/



  return $schema;
}

/**
 * Implements hook_ding_entity_fields
 **/
function ting_openformat_ding_entity_fields() {
  return array(

    /******* WORK **************/
    'ting_openformat_work_title' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkWorkEntity',
        'label' => t('Work title'),
        'bundle' => 'bibdkWorkEntity',
        'entity_type'=>'bibdkWorkEntity',
      ),
    ),

    'ting_openformat_work_creators' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkWorkEntity',
        'label' => t('Work creators'),
        'bundle' => 'bibdkWorkEntity',
        'entity_type' => 'bibdkWorkEntity'
      ),
    ),
    'ting_openformat_work_subjects' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkWorkEntity',
        'label' => t('Work subjects'),
        'bundle' => 'bibdkWorkEntity',
        'entity_type' => 'bibdkWorkEntity'
      ),
    ),
    /********** MANIFESTATION ************/

    // TYPE 1
    'bibdk_mani_type' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Manifestation type'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),

    // ORIGINAL TITLE 0 .. 1
    'bibdk_mani_orig_title' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Original title'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),

    // CONTRIBUTORS zero or 1 occurence
    'bibdk_mani_contribs' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Contributors'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),

    // SERIESTITLE zero or more occurence(s)
    'bibdk_mani_series' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Series'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // RELATEDSERIESTITLE zero or more occurence(s)
    'bibdk_mani_related_series' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Related series'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // READABILITYINDEX zero or more occurence(s)
    'bibdk_mani_readability_indexes' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Readability indexes'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // SHELF zero or more occurence(s)
    'bibdk_mani_shelf' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Shelf'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    // SHELF zero or more occurence(s)
    'bibdk_mani_genre' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Genre'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // AUDIENCE SUBJECTS zero or more occurence(s)
    'bibdk_mani_audience_subjects' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Audience Subjects'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // MARKED AUDIENCE zero or more occurence(s)
    'bibdk_mani_marked_audience' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Marked Audience'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // RECOMMENDED AUDIENCE zero or more occurence(s)
    'bibdk_mani_recommended_audience' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Recommended Audience'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // USED LANGUAGE zero or more occurence(s)
    'bibdk_mani_used_language' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Used Language'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    
    // ACTOR NOTE zero or more occurence(s)
    'bibdk_mani_actor_note' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Actor Note'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // DESCRIPTION NOTE zero or more occurence(s)
    'bibdk_mani_description_note' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Description Note'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // REFERENCES zero or more occurence(s)
    'bibdk_mani_references' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('References'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    
    // ORIGINALS zero or more occurence(s)
    'bibdk_mani_originals' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Originals'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // CONTEXT zero or more occurence(s)
    'bibdk_mani_context' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Context'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // Identifiers zero or more occurence(s)
    'bibdk_mani_identifiers' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Identifiers'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // PRICE INFORMATION zero or more occurence(s)
    'bibdk_mani_price_information' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Price Information'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    
    // LANGUAGE zero or more occurence(s)
    'bibdk_mani_language' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Language'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    // ACCESS INFORMATION zero or more occurence(s)
    'bibdk_mani_access_information' => array(
      'field' => array(
        'locked' => FALSE,
        'storage' => array(
          'type' => 'virtual_field',
        ),
      ),
      'instance' => array(
        'ding_entity_type' => 'bibdkManifestation',
        'label' => t('Access Information'),
        'bundle' => 'bibdkManifestation',
        'entity_type' => 'bibdkManifestation'
      ),
    ),
    
    
    
    
  );
}




/**
 * Implements hook_update_N;
 * install ting_openformat_manifestation table;
 * install cache_ting_openformat_entities table
 */
function ting_openformat_update_7005() {
  try{
  drupal_install_schema('ting_openformat');
  }
  catch(Exception $e){
    //do nothing; tables are probably already installed
  }
}

/**
 * Implements hook_update_N;
 * Install cache_bibdk_webservices table
 **/
function ting_openformat_update_7008() {
  $name = 'cache_bibdk_webservices';
  $schema = drupal_get_schema_unprocessed('system', 'cache');
  try{
    db_create_table($name, $schema);
  }
  catch(Exception $e) {
    // do nothing table already exists
  }
}