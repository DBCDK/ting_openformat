<?php

/**
 * @file
 * Install, update and uninstall functions for the ting module.
 */

/**
 * Implements hook_schema().
 */
function ting_openformat_schema() {
  $schema['ting_openformat_manifestation'] = array(
    'description' => 'Local proxy table for ting_openformat manifestations.',
    'fields' => array(
      'tid' => array(
        'description' => 'The primary local identifier for a ting_openformat manifestation.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ding_entity_id' => array(
        'description' => 'The ting_openformat manifestation id.',
        'type' => 'varchar',
        'length' => 256,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'ding_entity_id' => array('ding_entity_id'),
    ),
    'primary key' => array('tid'),
  );

  // ... also make a cache table in case we decide to cache som entities
  $schema['cache_bibdk_webservices'] = drupal_get_schema_unprocessed('system', 'cache');

  return $schema;
}

/**
 * Implements hook_ding_entity_fields
 * */
function ting_openformat_ding_entity_fields() {
  module_load_include('inc', 'ting_openformat', 'ting_openformat.field_definitions');
  $fields = ting_openformat_bibdk_fields();
  foreach ($fields as $name => $field) {
    $display = isset($field['custom_display']) ? $field['custom_display'] : ting_openformat_display_types($field['display']);
    $array[$name] = ting_openformat_field_settings($field['label'], $field['entity_type'], $display);
  }
  return $array;
}

/**
 * Set display settings
 */
function ting_openformat_display_types($types) {

  $display = array(
    'default' => array(
      'type' => 'default',
    ),
    'reservation' => array(
      'type' => 'hidden',
    ),
    'full' => array(
      'type' => 'hidden',
    ),
  );
  if (isset($types)) {
    foreach ($types as $type) {
      $display[$type]['type'] = 'default';
    }
  }

  return $display;
}


/**
 * Generate field settings for hook_ding_entity_fields
 */
function ting_openformat_field_settings($title, $entity_type, $display) {
  $field = array(
    'field' => array(
      'locked' => FALSE,
      'storage' => array(
        'type' => 'virtual_field',
      ),
    ),
    'instance' => array(
      'ding_entity_type' => $entity_type,
      'label' => $title,
      'bundle' => $entity_type,
      'entity_type' => $entity_type,
      'display' => $display,
    ),
  );
  return $field;
}

/**
 * Implements hook_update_N;
 * install ting_openformat_manifestation table;
 * install cache_ting_openformat_entities table
 */
function ting_openformat_update_7005() {
  try {
    drupal_install_schema('ting_openformat');
  } catch (Exception $e) {
    //do nothing; tables are probably already installed
  }
}

/**
 * Implements hook_update_N;
 * Install cache_bibdk_webservices table
 * */
function ting_openformat_update_7008() {
  $name = 'cache_bibdk_webservices';
  $schema = drupal_get_schema_unprocessed('system', 'cache');
  try {
    db_create_table($name, $schema);
  } catch (Exception $e) {
    // do nothing table already exists
  }
}

/**
 * Implements hook_update_N;
 * Update all field information
 * */
function ting_openformat_update_7015() {
  ding_entity_modules_enabled(array('ting_openformat'));
}

/**
 * Implements hook_update_N;
 * Update all field information
 * */
function ting_openformat_update_7016() {
  ding_entity_modules_enabled(array('ting_openformat'));
}

/**
 * Implements hook_update_N;
 * Update all field information
 * */
function ting_openformat_update_7017() {
  ding_entity_modules_enabled(array('ting_openformat'));
}

/**
 * Implements hook_update_N;
 * Update Volume and Section field information
 * */
function ting_openformat_update_7018() {
  field_delete_field('bibdk_mani_volume');
  field_delete_field('bibdk_mani_section');
  ding_entity_modules_enabled(array('ting_openformat'));

}


/**
 * Implements hook_update_N;
 * Update all field information
 * */
function ting_openformat_update_7023() {
  ding_entity_modules_enabled(array('ting_openformat'));
}

// 435 lines before refactoring
