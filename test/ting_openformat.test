<?php

class TingOpenFormatUnitTestCase extends DrupalUnitTestCase {

  public static function getInfo() {
    return array(
      'name' => t('Unittest'),
      'description' => t('Tests the methods of the different entities'),
      'group' => t('Ting Openformat'),
    );
  }

  public function setUp() {
    $this->_createObjects();

    parent::setUp();
  }


  public function testManifistationMethods() {
    $this->_testSimplefunction("getSubType", "Bog");
    $this->_testSimplefunction("getOriginalTitle", NULL);
  }

  private function _testSimplefunction($method, $expected_result) {
    $manifestation = $this->manifestation;
    $result = $manifestation->$method();
    $message = "$method method returned : " . print_r($result, true) . " Should be " . print_r($expected_result, TRUE);
    if (is_array($expected_result)) {
      $expected_result = serialize($expected_result);
      $result = serialize($result);
    }

    $this->assertEqual($expected_result, $result, $message);

  }

  private function _createObjects() {
    $file = file_get_contents(drupal_get_path("module", "ting_openformat") . "/test/mockup/manifestation.working.json");
    $result = json_decode($file);

    $manifestation_object = $result->searchResponse->result->searchResult[0]->formattedCollection->workDisplay->manifestation;
    $this->manifestation = entity_load('bibdkManifestation', $manifestation_object->adminData->pid->{'$'}, $manifestation_object);
  }

  private $manifestation;
  private $work, $subwork;
}
