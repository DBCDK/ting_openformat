<?php
// @TODO; implement entity
// hook_entity_info etc..

// load search info and hooks
module_load_include('inc', 'ting_openformat','ting_openformat.search');


/************** ENTITY ****************/

/** @TODO make this work
 * Implements hook_entity_info
 * define a new entity
 **/

function ting_openformat_entity_info() {
  $return = array(
    'ting_openformat_manifestation' => array(
      'label' => t('Ting openformat manifestation'),
      'fieldable' => TRUE,
      'base table' => 'ting_openformat_manifestation',

      // make this a ding_entity ?
      'ding_entity_type' => 'ding_entity',
      'ding_entity_menu' => 'ting/manifestation/%ting_manifestation',
      'ding_entity_index' => 2,

      // uri callback
      //'uri callback' => 'ting_openformat_maniobject_uri',

      'description' => t('openformat fields'),
      // leave controller class blank for now (use DrupalDefaultEntityController) @TODO implement
      'controller class' => 'ManifestionEntityAPIController',
      'entity keys' => array(
        //'id' => 'tid',
        'id' => 'ding_entity_id',
      ),
      'bundles' => array(
        'ting_openformat_manifestation' => array(
          'label' => 'Ting openformat manifestation',
          'admin' => array(
            'path' => 'admin/structure/ting_manifestation',
            'access arguments' => array('administer content types'),
            'controller class' => 'OpenFormatTypeUIController',
          ),
        ),
      ),
    )
  );

  return $return;
}

/**************** end ENTITY ***************/

/***********  panel-pages ****************/

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function ting_openformat_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implement hook_ctools_plugin_api().
 */
function ting_openformat_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**************** end panel-pages ***************/

/** Implements hook_ding_devel_timers
 */
function ting_openformat_ding_devel_timers() {
  return array(
    'search_client' => array(
      'title' => 'Search client total request time was @time ms.',
    ),
    'search_client_net' => array(
      'title' => 'Search client net time was @time ms.',
      'include in total' => FALSE,
    ));
}


/******************* ADMIN *****************/

/**
 * Impelments hook_flush_caches
 **/

function ting_openformat_flush_caches() {
  return array('cache_bibdk_webservices');
}

/**
 * Implements hook_menu
 **/
function ting_openformat_menu() {
  $items['admin/config/openformat'] = array(
    'title' => 'Openformat settings',
    'description' => 'Manage openformat integration settings.',
    'position' => 'left',
    'weight' => 20,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/openformat/search_client'] = array(
    'title' => 'Search client configuration',
    'description' => 'Configure search settings',
    'page callback' => 'drupal_get_form',
    'page arguments'=> array('ting_openformat_client_admin_form'),
    'access arguments' => array('administer openformat settings'),
    // 'type' => MENU_LOCAL_ACTION,
    'file' => 'ting_openformat.admin.inc',
  );

  return $items;
}

/*** FACETBROWSER ****/

/**
 * Implements hook_ding_facetbrowser().
 * initialize facetbrowser
 */
function ting_openformat_ding_facetbrowser() {
  $results             = new stdClass();
  $results->show_empty = FALSE;
  $search_result       = drupal_static('ting_search_results');
  if ($search_result) {
    $results->facets     = ($search_result instanceof TingClientSearchResult) ? $search_result->facets : array();
    $results->searchkey  = $search_result->search_key;
    return $results;
  }
}

/**
 * UI controller. -- @see entity module
 */
class OpenFormatTypeUIController extends EntityDefaultUIController {

  /**
   * Overrides hook_menu() defaults.
   */
  public function hook_menu() {
    $items = parent::hook_menu();
    $items[$this->path]['description'] = 'HEST HEST HEST.';
    return $items;
  }
}

// COMMENTED OUT FOR NOW - show bibdk_entity in admin/structure
/**
 * Implements hook_menu_alter().
 *
 * add menu item on admin/structure .. maybe this can be done via EntityDefaultUIController -- @see entity module
 *
 * Adjusts the menu so that the field subtab becomes the default local task,
 * to avoid having an useless placeholder page.
 */
function ting_openformat_menu_alter(&$items) {
  if (module_exists('field_ui')) {
    if (isset($items['admin/structure/ting_manifestation/fields'])) {
      // Make the fields task the default local task.
      $items['admin/structure/ting_manifestation'] = $items['admin/structure/ting_manifestation/fields'];
      //$items['admin/structure/ting_manifestation'] = $items['admin/structure/ting_manifestation'];
      $item = &$items['admin/structure/ting_manifestation'];
      $item['type'] = MENU_NORMAL_ITEM;
      $item['title'] = 'Ting manifestations';
      $item['description'] = 'Manage Ting manifestation display.';

      $items['admin/structure/ting_manifestation/fields'] = array(
        'title' => 'Manage fields',
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 1,
      );
    }
  }
}



